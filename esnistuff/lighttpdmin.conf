# debug.log-request-handling = "enable"
# debug.log-condition-handling = "enable"

# TOP is set by testighttpd.sh and is usually
# $HOME/code/openssl
var.rootroot = env.TOP + "/esnistuff"

# standard stuff - testlighttpd.sh makes these dirs if needed
server.document-root = rootroot + "/lighttpd/www"
var.log_root    = rootroot + "/lighttpd/logs"
server.errorlog = log_root + "/error.log"

# this is HTTPS only basically
server.port = 3443

# logging is handy to see how we're doing
server.modules += ( "mod_accesslog" )
accesslog.filename          = log_root + "/access.log"

# not sure if this is needed, but no harm being nice to browsers
mimetype.assign = (
  ".html" => "text/html", 
  ".txt" => "text/plain",
  ".jpg" => "image/jpeg",
  ".png" => "image/png" 
)

server.modules += ( "mod_openssl" )
var.cadir= rootroot + "/cadir"

ssl.engine                  = "enable"
ssl.pemfile                 = cadir + "/example.com.pem"
ssl.ca-file                 = cadir + "/oe.csr"
ssl.ech-opts = (
  "keydir" => rootroot + "/echkeydir",

  "refresh" => 3600, # reload hourly
  # "refresh" => 60,    # reload every minute (testing)
  #"refresh" => 0,            # never reload
  # (minimum check interval is actually 64 seconds (2^6))

  # trial decryption allows clients to hide better by not sending real digests
  # that is turned on by default (as we're likely a small server so no harm and
  # better privacy), but you can disable it...
  #"trial-decrypt" => "disable",
)

$HTTP["host"] == "foo.example.com" {
    ssl.pemfile                 = cadir + "/foo.example.com.pem"
    server.name                 = "foo.example.com"
}
$HTTP["host"] == "baz.example.com" {
    ssl.non-ech-host            = "example.com"
    ssl.pemfile                 = cadir + "/baz.example.com.pem"
    server.document-root        = rootroot + "/lighttpd/baz"
}

# If you wanted a cleartext HTTP listener on e.g. port 3000:
#$SERVER["socket"] == "127.0.0.1:3000" {
    #ssl.engine                  = "disable"
#}


